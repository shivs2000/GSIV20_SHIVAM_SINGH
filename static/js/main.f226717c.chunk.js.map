{"version":3,"sources":["actions/listAction.js","components/ListPage.js","components/DetailsPage.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["listAction","type","useStyles","makeStyles","theme","root","marginTop","marginLeft","marginRight","media","height","appBar","backgroundColor","display","inputBase","borderRadius","flex","padding","multiLineEllipsis","overflow","textOverflow","ListPage","classes","useState","movies","setMovies","search","setSearch","searchResult","setSearchresult","value","useSelector","state","listNumber","dispatch","useDispatch","searchMovie","a","length","axios","get","response","data","results","getList","console","log","movieArrray","concat","items","useEffect","Grid","container","AppBar","className","Toolbar","Box","flexGrow","InputBase","placeholder","onChange","e","target","to","IconButton","spacing","map","item","xs","sm","md","lg","Card","id","style","textDecoration","CardActionArea","CardMedia","component","alt","src","poster_path","title","CardContent","justifyContent","Typography","fontSize","color","vote_average","overview","dataLength","next","hasMore","paddingRight","overflowY","overflowX","grid","info","marginBottom","DetailsPage","movie_id","useParams","movie","Setmovie","crew","Setcrew","cast","Setcast","getMovie","getCredits","release_date","position","variant","Grey","alignItems","runtime","filter","val","known_for_department","name","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","currentMovie","visited","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f226717c.chunk.js","sourcesContent":["const listAction=()=>{\r\n    return{\r\n    type:'updateListNumber'\r\n }\r\n \r\n }\r\n export default listAction;","import {\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CardActionArea,\r\n  AppBar,\r\nToolbar,\r\nInputBase,\r\n\r\nIconButton,\r\nBox\r\n} from '@material-ui/core';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport {\r\n\r\n  Link,\r\n  \r\n} from 'react-router-dom';\r\nimport {\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {useSelector,useDispatch,} from 'react-redux';\r\nimport listAction from '../actions/listAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 70,\r\n    marginLeft: \"auto\",\r\n    marginRight: 50,\r\n\r\n\r\n  },\r\n  media: {\r\n    height: 180,\r\n    // paddingTop: '56.25%', // 16:9\r\n  },\r\n  \r\n    appBar:{\r\n      backgroundColor:'White',\r\n      display:'flex'\r\n      },\r\n     inputBase:{\r\n       backgroundColor:'#DFDFDF',\r\n       borderRadius:4,\r\n       flex:0.3,\r\n       padding:4\r\n     }\r\n\r\n  ,\r\n  multiLineEllipsis: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\":2,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n  }\r\n\r\n}));\r\n\r\nconst ListPage = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [search,setSearch]=useState([]);\r\n  const [searchResult,setSearchresult]=useState([]);\r\n  const value=useSelector(state=>state.listNumber);\r\n  //const search=useSelector(state=>state.search);\r\n  //const movies=useSelector(state=>state.movieArray);\r\n  const dispatch=useDispatch();\r\n  \r\n  //movie search function\r\n  const searchMovie=async()=>{\r\n    if(search.length>0){\r\n    const response=await axios.get(\r\n      `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=afe3feda2272b853b181533a7aa4129b&language=en-US&page=1`, {\r\n        \r\n    });\r\n    //console.log(response.data);\r\n    setSearchresult(response.data.results);\r\n    }\r\n     }\r\n     //list getting function\r\n const getList=async()=>{\r\n  const response=await axios.get(\r\n    `https://api.themoviedb.org/3/list/${value}?api_key=afe3feda2272b853b181533a7aa4129b`, {\r\n      \r\n  });\r\n  \r\n  console.log(value);\r\n   var movieArrray=movies.concat(response.data.items);\r\n  setMovies(movieArrray);\r\n  // dispatch(updateMovieArray(response.data.items));\r\n  // console.log(response.data.items);\r\n  // }\r\n  // else{\r\n  //  return ;\r\n  // }\r\n  }\r\n  useEffect(()=>{\r\n    // console.log(\"inside useEffect\");\r\n     getList();\r\n    \r\n \r\n      },[value])\r\n\r\n  useEffect(()=>{\r\n     searchMovie();\r\n \r\n    },[search]);\r\n\r\n\r\n\r\n  if(search.length>0){\r\n     return ( <>\r\n        <Grid container >\r\n    <       AppBar className={classes.appBar}>\r\n                      <Toolbar>\r\n                         \r\n                          <Box display='flex' flexGrow={1}>\r\n                          <InputBase \r\n                             placeholder=\"Search Movie...\"\r\n                        className={classes.inputBase}\r\n                        onChange={(e)=>{setSearch(e.target.value); searchMovie();}}\r\n                          />\r\n            {/* whatever is on the left side */}\r\n        \r\n                         \r\n            </Box>\r\n            <Link to=\"/listpage\">\r\n            <IconButton  >\r\n            \r\n                     <HomeIcon />\r\n                   \r\n                 </IconButton>\r\n                 </Link>\r\n\r\n                       </Toolbar>\r\n\r\n\r\n              </AppBar>\r\n              <Grid container className={classes.root} spacing={1} >\r\n          {searchResult.map((value) => (\r\n            <Grid key={value.id} item xs={12} sm={4} md={3} lg={2}>\r\n              <Card >\r\n              <Link to={\"/detailspage/\"+value.id} style={{textDecoration:'none',}}>\r\n                <CardActionArea >\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt=\"Poster NOT AVAILABLE\"\r\n                  height=\"140\"\r\n                   src={'https://image.tmdb.org/t/p/w500/'+value.poster_path}\r\n\r\n                  title=\"poster\"\r\n                />\r\n                <CardContent style={{display:'flex',justifyContent: \"space-between\"}}>\r\n                <Typography  style={{fontSize:14,color:\"#4A4A4A\"}}>\r\n                  {value.title}\r\n                  </Typography>\r\n                  <Typography  style={{fontSize:14,color:\"#4A4A4A\"}}>\r\n                  {value.vote_average}/10\r\n                  </Typography>\r\n                  </CardContent>\r\n                  <CardContent>\r\n                  <Typography color=\"textSecondary\" style={{fontSize:12}}className={classes.multiLineEllipsis}>\r\n                  {value.overview}\r\n                  </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n          </Grid>\r\n              </Grid>\r\n\r\n      </>\r\n     );\r\n       }\r\n      else{\r\n\r\n       return (\r\n           <>\r\n           <Grid container >\r\n              <AppBar className={classes.appBar}>\r\n                      <Toolbar>\r\n                         \r\n                          <Box display='flex' flexGrow={1}>\r\n                          <InputBase \r\n                             placeholder=\"Search Movie...\"\r\n                        className={classes.inputBase}\r\n                        onChange={(e)=>{setSearch(e.target.value)}}\r\n                          />\r\n            {/* whatever is on the left side */}\r\n        \r\n                         \r\n            </Box>\r\n            <Link to=\"/listpage\">\r\n            <IconButton  >\r\n            \r\n                     <HomeIcon />\r\n                   \r\n                 </IconButton>\r\n                 </Link>\r\n\r\n                       </Toolbar>\r\n\r\n\r\n              </AppBar>\r\n         <InfiniteScroll\r\n            dataLength={movies.length} //This is important field to render the next data\r\n            next={()=>{dispatch(listAction())}}\r\n           hasMore={true}\r\n           style={{paddingRight:10,overflowY:'hidden',overflowX:'hidden'}}\r\n          \r\n         >\r\n           <Grid container className={classes.root} spacing={1} >\r\n          {movies.map((value) => (\r\n            <Grid key={value.id} item xs={12} sm={4} md={3} lg={2}>\r\n              <Card >\r\n              <Link to={\"/detailspage/\"+value.id} style={{textDecoration:'none',}}>\r\n                <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt=\"Poster\"\r\n                  height=\"140\"\r\n                   src={'https://image.tmdb.org/t/p/w500/'+value.poster_path}\r\n\r\n                  title=\"poster\"\r\n                />\r\n                <CardContent style={{display:'flex',justifyContent: \"space-between\"}}>\r\n                <Typography  style={{fontSize:14,color:\"#4A4A4A\"}}>\r\n                  {value.title}\r\n                  </Typography>\r\n                  <Typography  style={{fontSize:14,color:\"#4A4A4A\"}}>\r\n                  {value.vote_average}/10\r\n                  </Typography>\r\n                  </CardContent>\r\n                  <CardContent>\r\n                  <Typography color=\"textSecondary\" style={{fontSize:12}}className={classes.multiLineEllipsis}>\r\n                  {value.overview}\r\n                  </Typography>\r\n                </CardContent>\r\n                 \r\n                </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n          </Grid>\r\n         </InfiniteScroll>\r\n        \r\n\r\n         </Grid>\r\n      \r\n      \r\n    </>\r\n  );\r\n          }\r\n}\r\nexport default ListPage;","import {\r\n    makeStyles,\r\n    AppBar,\r\n    IconButton,\r\n    Toolbar,\r\n    Card,\r\n    CardMedia,\r\n    Grid,\r\n    Typography,\r\n\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react';\r\nimport {Link ,useParams} from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Grey from '@material-ui/core/colors/grey';\r\n\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n    },\r\n    grid:{\r\n        marginTop: 7,\r\n        marginLeft: \"auto\",\r\n        \r\n    },\r\n    appBar:{\r\n    backgroundColor:'white',\r\n    display:'flex',\r\n    \r\n    },\r\n    title:{\r\n        color:'gray',\r\n        flexGrow:1,\r\n    },\r\n    Card:{\r\n    borderRadius:1.5,\r\n    marginLeft:5,\r\n    marginRight:7,\r\n    },\r\n    info:{\r\n    marginRight:10,\r\n    marginBottom:6,\r\n    },\r\n    multiLineEllipsis: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        display: \"-webkit-box\",\r\n        \"-webkit-line-clamp\":1,\r\n        \"-webkit-box-orient\": \"vertical\",\r\n        marginRight:10,\r\n    marginBottom:6,\r\n      }\r\n   \r\n  \r\n  }));\r\n  \r\n\r\n\r\nconst DetailsPage=()=>{\r\nconst params=useParams();\r\n//console.log(params.movie_id);\r\nconst movie_id=params.movie_id;\r\nconst [movie,Setmovie]= useState([]);\r\nconst [crew,Setcrew]=useState([]);\r\nconst [cast,Setcast]=useState([]);\r\n\r\nconst classes=useStyles();\r\n\r\n\r\nconst getMovie=async()=>{\r\n    const response=await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${movie_id}?api_key=afe3feda2272b853b181533a7aa4129b&language=en-US`, {\r\n          \r\n      });\r\n      Setmovie(response.data)\r\n      console.log(response.data);\r\n      \r\n}\r\nconst getCredits=async()=>{\r\n    const response=await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=afe3feda2272b853b181533a7aa4129b&language=en-US`, {\r\n          \r\n      });\r\n      console.log(response.data);\r\n      Setcast(response.data.cast);\r\n      Setcrew(response.data.crew);\r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n    getMovie();\r\n    getCredits();\r\n},[])\r\n    \r\nconst year=movie.release_date;\r\n\r\n   \r\n\r\nreturn (\r\n    \r\n    <>\r\n    <Grid container>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\"  className={classes.title}>\r\n           Movie  Details\r\n          </Typography>\r\n          <Link to=\"/listpage\">\r\n            <IconButton color={Grey['#4A4A4A']} >\r\n            \r\n                     <HomeIcon />\r\n                   \r\n                 </IconButton>\r\n                 </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    <Grid container className={classes.grid}>\r\n        <Grid item xs ={12} sm={12} md={2}  >\r\n            <Card className={classes.Card}>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Poster\"\r\n                height=\"265\"\r\n               \r\n                src={'https://image.tmdb.org/t/p/w500/'+movie.poster_path}\r\n\r\n                title=\"Paella dish\"\r\n                />\r\n\r\n               \r\n               \r\n            </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}  md={10} style={{alignItems:'right'}}>\r\n       <Typography className={classes.info} style={{fontSize:16,color:\"#4A4A4A\"}}>\r\n           <b>{movie.title}</b>({movie.vote_average}/10)\r\n       </Typography >\r\n       <Typography className={classes.info} style={{fontSize:16,color:\"#4A4A4A\"}}>\r\n       <b>Release-date:</b>{movie.release_date} | <b>Length:</b>{movie.runtime} |<b >Directors:</b>{crew.filter((val)=>{\r\n    return val.known_for_department=='Directing';\r\n      }).map((val)=>(<>{val.name} </>))}\r\n       \r\n       </Typography>\r\n       <Typography  className={classes.multiLineEllipsis} style={{fontSize:16,color:\"#4A4A4A\"}}>\r\n           <b>Cast:</b>\r\n               {cast.filter((val)=>{\r\n                return val.known_for_department=='Acting';\r\n                  }).map((val)=>(<>{val.name},</>))}\r\n           \r\n       </Typography>\r\n       <Typography className={classes.info} style={{fontSize:16,color:\"#4A4A4A\"}}>\r\n           <b>Description:</b>{movie.overview}\r\n       </Typography>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n    </Grid>\r\n    \r\n    </>\r\n);\r\n\r\n}\r\nexport default DetailsPage;","import ListPage from './components/ListPage';\nimport DetailsPage from './components/DetailsPage';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n      <div>\n        \n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route  exact path=\"/\">\n            <ListPage />\n          </Route>\n          <Route path=\"/detailspage/:movie_id\">\n            <DetailsPage />\n          </Route>\n          <Route path=\"/listpage\">\n            <ListPage />\n          </Route>\n          \n        </Switch>\n      </div>\n    </Router>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState={\r\n\r\n    currentMovie:0,\r\n    visited:[],\r\n    listNumber:1,\r\n    \r\n}\r\nconst rootReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case 'updateListNumber': {\r\n          return {\r\n            // Again, one less level of nesting to copy\r\n            ...state,\r\n            listNumber:state.listNumber+1\r\n          }\r\n        }\r\n        \r\n        \r\n        default:\r\n          return{ ...state} \r\n}\r\n\r\n\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers/rootReducer';\nconst store=createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    \n    <App />\n   \n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}